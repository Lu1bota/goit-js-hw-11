{"version":3,"file":"index.js","sources":["../src/js/render-functions.js","../src/js/pixabay-api.js","../src/main.js"],"sourcesContent":["// У файлі render-functions.js створи екземпляр SimpleLightbox для роботи з модальним вікном та зберігай функції для відображення елементів інтерфейсу:\n\n// createGallery(images). Ця функція повинна приймати масив images, створювати HTML-розмітку для галереї, додавати її в контейнер галереї та викликати метод екземпляра SimpleLightbox refresh(). Нічого не повертає.\n// clearGallery(). Ця функція нічого не приймає та повинна очищати вміст контейнера галереї. Нічого не повертає.\n// showLoader(). Ця функція нічого не приймає, повинна додавати клас для відображення лоадера. Нічого не повертає.\n// hideLoader(). Ця функція нічого не приймає, повинна прибирати клас для відображення лоадера. Нічого не повертає.\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nexport function createGallery(images) {\n  return images\n    .map(item => {\n      return `\n    <li class=\"list-item\">\n    <div class=\"image-container\">\n    <a class=\"item-link\" href=\"${item.largeImageURL}\">\n    <img\n      class=\"gallery-image\"\n      src=\"${item.webformatURL}\"\n      alt=\"${item.tags}\"\n    />\n  </a>\n  </div>\n  <div class=\"container-item\">\n  <div class=\"container-follow\">\n  <strong>Likes</strong>\n  <span>${item.likes}</span>\n  </div>\n  <div class=\"container-follow\">\n  <strong>Views</strong>\n  <span>${item.views}</span>\n  </div>\n  <div class=\"container-follow\">\n  <strong>Comments</strong>\n  <span>${item.comments}</span>\n  </div>\n  <div class=\"container-follow\">\n  <strong>Downloads</strong>\n  <span>${item.downloads}</span>\n  </div>\n  </div>\n  </li>\n    `;\n    })\n    .join('');\n}\n\nexport let lightbox = new SimpleLightbox('.item-link', {\n  captionsData: 'alt',\n  captionDelay: 250,\n});\n\nexport function clearGallery() {\n  const list = document.querySelector('.gallery');\n  list.innerHTML = '';\n}\n","// У файлі pixabay-api.js зберігай функції для виконання HTTP-запитів:\n// getImagesByQuery(query). Ця функція повинна приймати один параметр query (пошукове слово, яке є рядком), здійснювати HTTP-запит і повертати значення властивості data з отриманої відповіді.\n\nimport axios from 'axios';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport { createGallery } from './render-functions';\n// import { list } from '../main';\n\nconst API_KEY = '49643579-021fb679616bd716ef3622271';\n\nexport function getImagesByQuery(query) {\n  return axios('https://pixabay.com/api/', {\n    params: {\n      key: API_KEY,\n      q: query,\n      image_type: 'photo',\n      orientation: 'horizontal',\n      safesearch: true,\n      per_page: 9,\n    },\n  })\n    .then(response => {\n      if (response.data.hits.length === 0) {\n        iziToast.error({\n          title: 'Error',\n          message:\n            'Sorry, there are no images matching your search query. Please try again!',\n          position: 'topRight',\n        });\n        return;\n      }\n\n      return response.data;\n    })\n    .catch(() => {\n      iziToast.error({\n        title: 'Error',\n        message:\n          'Sorry, there are no images matching your search query. Please try again!',\n      });\n    });\n}\n","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport axios from 'axios';\nimport { getImagesByQuery } from './js/pixabay-api';\nimport { clearGallery, createGallery, lightbox } from './js/render-functions';\n\nconst form = document.querySelector('.form');\nconst input = form.querySelector('input');\nform.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  clearGallery();\n\n  if (input.value.trim().length === 0) return;\n\n  getImagesByQuery(input.value).then(response => {\n    const list = document.querySelector('.gallery');\n    list.insertAdjacentHTML('beforeend', createGallery(response.hits));\n    lightbox.refresh();\n  });\n}\n"],"names":["createGallery","images","item","lightbox","SimpleLightbox","clearGallery","list","API_KEY","getImagesByQuery","query","axios","response","iziToast","form","input","handleSubmit","event"],"mappings":"owBASO,SAASA,EAAcC,EAAQ,CACpC,OAAOA,EACJ,IAAIC,GACI;AAAA;AAAA;AAAA,iCAGoBA,EAAK,aAAa;AAAA;AAAA;AAAA,aAGtCA,EAAK,YAAY;AAAA,aACjBA,EAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAOZA,EAAK,KAAK;AAAA;AAAA;AAAA;AAAA,UAIVA,EAAK,KAAK;AAAA;AAAA;AAAA;AAAA,UAIVA,EAAK,QAAQ;AAAA;AAAA;AAAA;AAAA,UAIbA,EAAK,SAAS;AAAA;AAAA;AAAA;AAAA,KAKnB,EACA,KAAK,EAAE,CACZ,CAEO,IAAIC,EAAW,IAAIC,EAAe,aAAc,CACrD,aAAc,MACd,aAAc,GAChB,CAAC,EAEM,SAASC,GAAe,CAC7B,MAAMC,EAAO,SAAS,cAAc,UAAU,EAC9CA,EAAK,UAAY,EACnB,CC9CA,MAAMC,EAAU,qCAET,SAASC,EAAiBC,EAAO,CACtC,OAAOC,EAAM,2BAA4B,CACvC,OAAQ,CACN,IAAKH,EACL,EAAGE,EACH,WAAY,QACZ,YAAa,aACb,WAAY,GACZ,SAAU,CACX,CACL,CAAG,EACE,KAAKE,GAAY,CAChB,GAAIA,EAAS,KAAK,KAAK,SAAW,EAAG,CACnCC,EAAS,MAAM,CACb,MAAO,QACP,QACE,2EACF,SAAU,UACpB,CAAS,EACD,MACD,CAED,OAAOD,EAAS,IACtB,CAAK,EACA,MAAM,IAAM,CACXC,EAAS,MAAM,CACb,MAAO,QACP,QACE,0EACV,CAAO,CACP,CAAK,CACL,CClCA,MAAMC,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAQD,EAAK,cAAc,OAAO,EACxCA,EAAK,iBAAiB,SAAUE,CAAY,EAE5C,SAASA,EAAaC,EAAO,CAC3BA,EAAM,eAAc,EACpBX,IAEIS,EAAM,MAAM,KAAM,EAAC,SAAW,GAElCN,EAAiBM,EAAM,KAAK,EAAE,KAAKH,GAAY,CAChC,SAAS,cAAc,UAAU,EACzC,mBAAmB,YAAaX,EAAcW,EAAS,IAAI,CAAC,EACjER,EAAS,QAAO,CACpB,CAAG,CACH"}